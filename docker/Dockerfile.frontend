FROM node:20-alpine AS build
# Stage 1 – React-Dashboard + Workspaces bauen, stabil gegen Root-Lockfile
WORKDIR /app

# Root-Lock + Workspace-Manifeste
COPY package*.json ./
COPY dashboard/package*.json ./dashboard/
COPY bsky-client/package*.json ./bsky-client/
# Installiere alle Workspaces (inkl. Root, falls benötigt)
RUN npm ci --workspaces --include-workspace-root

# Quellcode der Workspaces
COPY dashboard/ ./dashboard/
COPY bsky-client/ ./bsky-client/
# Dashboard-Build (importiert bsky-client als Workspace-Dependency)
RUN npm run --workspace dashboard build

# Stage 2 – gebauten Output über Nginx mit Proxy-Konfiguration ausliefern.
FROM nginx:alpine
# Tools for healthcheck
RUN apk add --no-cache curl
COPY --from=build /app/dashboard/dist /usr/share/nginx/html
COPY docker/nginx-frontend.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
