###############################################
# .env.sample – Vorlage mit Erläuterungen     #
#
# Kopiere diese Datei zu ".env" und passe sie an.
# Sensible Werte niemals committen.            #
###############################################

## Bluesky (erforderlich)
# Basis-URL des Bluesky/ATProto-Dienstes. Standard ist bsky.social.
BLUESKY_SERVER_URL=https://bsky.social
# Handle oder E-Mail, mit der sich der Bot anmeldet.
BLUESKY_IDENTIFIER=deinname.bsky.social
# App-spezifisches Passwort aus den Bluesky-Einstellungen.
BLUESKY_APP_PASSWORD=xxxx-xxxx-xxxx-xxxx

## Mastodon (optional)
# Wenn beide Werte gesetzt sind, werden Mastodon-Funktionen im Backend aktiviert.
#MASTODON_API_URL=https://mastodon.social
#MASTODON_ACCESS_TOKEN=dein_token

## Scheduler & Lokalisierung
# Serverseitige Zeitzone für den Scheduler (IANA-Format, z. B. Europe/Berlin).
TIME_ZONE=Europe/Berlin
# Clientseitige Defaults, die beim Frontend-Build (Vite) verwendet werden.
VITE_TIME_ZONE=Europe/Berlin
VITE_LOCALE=de-DE
# Optional: Cron-Ausdruck als Standard für den Scheduler (UI kann dies überschreiben).
# Standard im Code ist jede Minute: "* * * * *"
#SCHEDULE_TIME=* * * * *

## Zuverlässigkeit beim Posten (Server)
# Werden als Default in der Datenbank gespeichert und können über die UI überschrieben werden.
POST_RETRIES=4            # Max. Wiederholversuche bei Fehlern
POST_BACKOFF_MS=600       # Basis-Backoff in Millisekunden
POST_BACKOFF_MAX_MS=5000  # Maximaler Backoff in Millisekunden

## Netzwerk-Ports
# Interner Backend-Port (Container-intern). Wird auch von docker-compose genutzt.
BACKEND_INTERNAL_PORT=3000
# Host-Port-Mapping für das Backend (z. B. http://localhost:3200)
BACKEND_PORT=3200
# Host-Port für den Nginx-Frontend-Container (Dashboard)
FRONTEND_PORT=8080
# Optional: Direkter Server-Port (lokaler Start ohne Docker). Fällt sonst auf 3000 zurück.
#APP_PORT=3000

## Dashboard Polling (Client; Build-Zeit oder zur Laufzeit via /api/client-config)
# Die VITE_* Variablen werden beim Frontend-Build in den Code eingebettet.
# Alternativ können zur Laufzeit (Server) auch die Varianten ohne VITE_ gesetzt werden:
#   THREAD_POLL_ACTIVE_MS, THREAD_POLL_IDLE_MS, THREAD_POLL_HIDDEN_MS, THREAD_POLL_MINIMAL_HIDDEN
#   SKEET_POLL_ACTIVE_MS,  SKEET_POLL_IDLE_MS,  SKEET_POLL_HIDDEN_MS,  SKEET_POLL_MINIMAL_HIDDEN
# Standardwerte (falls nicht gesetzt): active 8000ms, idle 40000ms, hidden 180000ms, minimalHidden false
VITE_THREAD_POLL_ACTIVE_MS=8000
VITE_THREAD_POLL_IDLE_MS=40000
VITE_THREAD_POLL_HIDDEN_MS=180000
VITE_THREAD_POLL_MINIMAL_HIDDEN=false

# Optional: getrennte Polling-Intervalle für die Skeet-Liste
#VITE_SKEET_POLL_ACTIVE_MS=8000
#VITE_SKEET_POLL_IDLE_MS=40000
#VITE_SKEET_POLL_HIDDEN_MS=180000
#VITE_SKEET_POLL_MINIMAL_HIDDEN=false

# Backoff-Strategie für Polling (Client)
# Fallbacks im Code: Start 10000ms, Max 300000ms, Jitter 0.15, Heartbeat 2000ms
VITE_POLL_BACKOFF_START_MS=10000
VITE_POLL_BACKOFF_MAX_MS=300000
VITE_POLL_JITTER_RATIO=0.15
VITE_POLL_HEARTBEAT_MS=2000

JSON_BODY_LIMIT_MB=25

# Hinweis zu Sicherheit & Quoting
# - Setze .env-Dateirechte restriktiv (z. B. chmod 600 .env).
# - Werte ohne Anführungszeichen eintragen; Leerzeichen vermeiden oder escapen.
